{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ashish rao ds\\\\Next\\\\nextjs-meetup\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetupDetailsPage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    image: props.image,\n    title: props.title,\n    description: props.description,\n    address: props.address\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n};\n\nexport default MeetupDetailsPage;\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://nextjs-user:wu3c1LmGMBscIctZ@cluster0.mbkhkkd.mongodb.net/My-meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollections = db.collection(\"meetups\");\n  const meetupPaths = await meetupsCollections.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetupPaths.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(context.params);\n  const client = await MongoClient.connect(\"mongodb+srv://nextjs-user:wu3c1LmGMBscIctZ@cluster0.mbkhkkd.mongodb.net/My-meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  const meetup = await meetupsCollection.find().toArray();\n  console.log(meetupId);\n  console.log(meetup);\n  console.log(selectedMeetup);\n  client.close();\n  return {\n    props: {// image: selectedMeetup.image,\n      // title: selectedMeetup.title,\n      // description: selectedMeetup.description,\n      // address: selectedMeetup.address,\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Ashish rao ds/Next/nextjs-meetup/pages/[meetupId]/index.js"],"names":["MeetupDetails","MongoClient","MeetupDetailsPage","props","image","title","description","address","getStaticPaths","client","connect","db","meetupsCollections","collection","meetupPaths","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","meetupsCollection","selectedMeetup","findOne"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,wCAA1B;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,sBAAO,QAAC,aAAD;AACL,IAAA,KAAK,EAAEA,KAAK,CAACC,KADR;AAEL,IAAA,KAAK,EAAED,KAAK,CAACE,KAFR;AAGL,IAAA,WAAW,EAAEF,KAAK,CAACG,WAHd;AAIL,IAAA,OAAO,EAAEH,KAAK,CAACI;AAJV;AAAA;AAAA;AAAA;AAAA,UAAP;AAMD,CAPD;;AASA,eAAeL,iBAAf;AAEA,OAAO,eAAeM,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CAAoB,gHAApB,CAArB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B;AAEA,QAAMC,WAAW,GAAG,MAAMF,kBAAkB,CAACG,IAAnB,CAAwB,EAAxB,EAA4B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA5B,EAAwCC,OAAxC,EAA1B;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,WAAW,CAACO,GAAZ,CAAgBC,MAAM,KAC3B;AACEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADJ;AADV,KAD2B,CAAtB;AAFF,GAAP;AAUD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACJ,MAApB;AAEA,QAAMd,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CAAoB,gHAApB,CAArB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMmB,iBAAiB,GAAGnB,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMkB,cAAc,GAAG,MAAMD,iBAAiB,CAACE,OAAlB,CAA0B;AAAEhB,IAAAA,GAAG,EAAEQ;AAAP,GAA1B,CAA7B;AACA,QAAMF,MAAM,GAAG,MAAMQ,iBAAiB,CAACf,IAAlB,GAAyBE,OAAzB,EAArB;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYE,cAAZ;AAEAtB,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLf,IAAAA,KAAK,EAAE,CACL;AACA;AACA;AACA;AAJK;AADF,GAAP;AAQD","sourcesContent":["import MeetupDetails from \"../../components/meetups/MeetupDetails\";\nimport { MongoClient } from \"mongodb\"\n\nconst MeetupDetailsPage = (props) => {\n  return <MeetupDetails\n    image={props.image}\n    title={props.title}\n    description={props.description}\n    address={props.address}\n  />\n}\n\nexport default MeetupDetailsPage;\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://nextjs-user:wu3c1LmGMBscIctZ@cluster0.mbkhkkd.mongodb.net/My-meetups?retryWrites=true&w=majority\")\n\n  const db = client.db()\n\n  const meetupsCollections = db.collection(\"meetups\")\n\n  const meetupPaths = await meetupsCollections.find({}, { _id: 1 }).toArray()\n\n  client.close()\n  return {\n    fallback: false,\n    paths: meetupPaths.map(meetup => (\n      {\n        params: {\n          meetupId: meetup._id.toString()\n        }\n      }\n    ))\n  }\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(context.params)\n\n  const client = await MongoClient.connect(\"mongodb+srv://nextjs-user:wu3c1LmGMBscIctZ@cluster0.mbkhkkd.mongodb.net/My-meetups?retryWrites=true&w=majority\")\n\n  const db = client.db()\n\n  const meetupsCollection = db.collection(\"meetups\")\n\n  const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId })\n  const meetup = await meetupsCollection.find().toArray()\n\n  console.log(meetupId)\n  console.log(meetup)\n\n  console.log(selectedMeetup)\n\n  client.close()\n\n  return {\n    props: {\n      // image: selectedMeetup.image,\n      // title: selectedMeetup.title,\n      // description: selectedMeetup.description,\n      // address: selectedMeetup.address,\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}